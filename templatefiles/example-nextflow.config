env {
        SINGULARITY_DOCKER_USERNAME='$oauthtoken'
        SINGULARITY_DOCKER_PASSWORD=<insert_personal_authentication_token_here>
}

params {
  
  resultsDir = "./results/"                                                             // Path to where all results will be saved

  // GET_METADATA parameters
  taxonId = "644223"                                                                    // Enter taxonomy ID
  limitSearch = "0"                                                                     // Limit number of records output from search query
  removeRun = '""'                                                                      // Remove specific run by specifying its run accession
  max_sra_bytes = "55000000000"                                                         // Specify runs to remove if they exceed size of sra_bytes
  dateMin = "1950-01-01"                                                                // Set minimum date
  dateMax = "2025-12-31"                                                                // Set maximum date

  // Genome files
  genome.reference = "resources/genome/GCF_000027005.1_ASM2700v1_genomic.fna"           // Path to genome reference file (FASTA format)
  genome.annotation = "resources/genome/pichia.gtf"                                     // Path to genome annotation file (GTF/GFF format)

  // STAR parameters                                                                    // STAR parameters (refer to STAR manual)
  star.sjdbOverhang = "100"
  star.genomeSAindexNbases = "10"
  star.alignIntronMax = "1"
  star.limitBAMsortRAM = "64000000000"
  star.outBAMsortingBinsN = "50"

  // featureCounts parameters                                                           // featureCounts parameters (refer to featureCounts manual)
  featureCounts.type.feature = "exon"
  featureCounts.type.attribute = "gene_id"

  // freebayes parameters                                                               // Freebayes parameters (refer to Freebayes manual)
  freebayes.ploidy = "1"

  // bcftools parameters                                                                // bcftools parameters (refer to bcftools manual)
  bcftools.filter_vcf.args = 'QUAL>20 && TYPE="snp"'

  // SALMON_INDEX parameters                                                            // salmon parameters (refer to salmon manual)
  // salmon.index.args = ""

  // SALMON_QUANT parameters
  salmon.quant.libtype = 'A'
  salmon.quant.args = ""

  // SUMMARIZE_TO_GENE parameters                                                       // tximport parameters (refer to tximport manual)
  summarize_to_gene.output = "txi-summarized-experiment.rds"                            // Specify tximport output file name
  summarize_to_gene.counts_from_abundance = "no"
  summarize_to_gene.quant.dir = "results/all-years/salmon-quant"                        // Specify path to directory containing quantification results


// The below parameters are not required to be specified unless 
// performing more advanced codon usage analysis
  // GET_HEG_LEG parameters
  get_heg_leg.proportion = 0.1
  get_heg_leg.permutations = 500
  get_heg_leg.output.heg = "heg-TrID.csv"
  get_heg_leg.output.leg = "leg-TrID.csv"

  // GET_HEG_LEG_FASTA parameters
  mut_fasta = "results/all-years/mut-transcriptome"
  get_heg_leg_fasta.heg_scores = "results/all-years/gene-rank-analysis/heg-scores.csv"
  get_heg_leg_fasta.leg_scores = "results/all-years/gene-rank-analysis/leg-scores.csv"

  // RANK_GENES parameters
  rank_genes.fdr = "0.01"
  txi = "results/all-years/dataset/dataset-2012-2022/txi-summarized-experiment.rds"

  // GET_CU_FREQUENCIES parameters
  get_cu_frequencies.heg_fasta_dir = "results/all-years/fasta-filter/heg-mut-transcriptome"
  get_cu_frequencies.leg_fasta_dir = "results/all-years/fasta-filter/leg-mut-transcriptome"
  get_cu_frequencies.protein_fasta_dir = "results/global-cu/protein-mut-transcriptome"
  get_cu_frequencies.kazusa_tax_id = "83333"

  // GET_CU_FIGURES parameters
  get_cu_figures.aa_property_table = "data/aa-properties.csv"

  // GET_KO_ID parameters
  get_ko_id.org = "eco"

  // CORDON_CODON_USAGE_ANALYSIS
  coRdon.cub_statistic = "MILC"
  coRdon.len_threshold = "80"

  // GET_TOP_GENES parameters
  top.genes.id = "testdata/datasets/txi-topGenes2trID.txt"

  // metadata
  metadata = "results/all-years/metadata/metadata.csv"

  // RANK_PRODUCT parameters
  compute_rank_product.txi = "results/cub-analysis-2018-2022/dataset/txi-summarized-experiment.rds"
  compute_rank_product.permutations = "500000"
  compute_rank_product.fdr_threshold = "0.05"

  // STRAIN_HEG_CAT_PLOT parameters
  real.txi = "results/all-years/dataset/dataset-2012-2022/txi-summarized-experiment.rds"
  real.metadata = "results/all-years/metadata/norm_metadata.csv"
  strain_heg_cat_plot.fdr = "0.01"
  strain_heg_cat_plot.num_strains = "10"

  // MERGE_VCF parameters
  vcf = "results/all-years/vcf"
  merge_vcf.vcf_dir = "results/all-years/vcf/*.vcf.gz"

  // VCFR_QC parameters
  vcfr_qc.merged_vcf = "results/all-years/merged-vcf/merged.vcf.gz"
  gff = "resources/genome/Escherichia_coli_str_k_12_substr_mg1655_gca_000005845.ASM584v2.55.chromosome.Chromosome.gff3.gz"

  // GET_VCF_STATS parameters
  get_vcf_stats.merged_vcf = "results/vcfr/merged-vcf/merged.vcf.gz"

  // PLOT_VCF_STATS parameters
  plot_vcf_stats.main_title = "'Escherichia coli merged samples'"

  // STRAIN_CU_HEATMAP
  strain_cu_heatmap.metadata = "results/all-years/metadata/metadata.csv"
  strain_cu_heatmap.fasta = "results/all-years/fasta-filter/heg-mut-transcriptome"
  strain_cu_heatmap.width = "15"
  strain_cu_heatmap.height = "15"

  // ANNOTATE_VCF parameters
  annotate_vcf.dir = "results/all-years/annotate-vcf"

  // MERGE_VCF parameters
  bcftools_view.merged_vcf = "results/vcf-plots/merged-vcf/merged.vcf.gz"

  // PLOT_VCF parameters
  plot_vcf.merged_vcf = "results/all-years/vcf-drop-genotypes/merged-drop-genotype.vcf.gz"

  // CALL_CONSEQUENCE parameters
  // vcf_dir = "results/all-years/vcf-drop-genotypes/merged-drop-genotype.vcf.gz"
  vcf_dir = "results/all-years/vcf"

  // PLOT_MUTATION_CIRCOS parameters
  mutation_freq_data = "results/all-years/mutation-panel-data/mutation-panel-data/mutation-frequency-data.csv"
  gene_tpm_scores = "results/all-years/gene-rank-analysis/chisq-results.csv"

  // tRNA analysis parameters
  featurecounts_metadata = "results/all-years/metadata/metadata.csv"
  featurecounts_dir = "results/all-years/featureCounts"
  summarize_to_gene_featurecounts.counts_from_abundance = "no"
  featurecounts_tpm_dir = "results/featurecounts-tpm/featureCounts-tpm"

}

profiles {                                                                              // Specify profiles depending on your machine configuration

    cell {

        process {

            executor='slurm'
            queue='compute'
            queueSize = 50

            withName: GET_METADATA {
                cpus = 2
                memory = 4.GB
            }

            withName: GET_READS {
                cpus = 8
                memory = { 8.GB * task.attempt }
                errorStrategy = { task.exitStatus in [7, 18, 28, 56, 140] ? 'retry' : 'retry' }
                maxRetries = 15
            }

            withName: PREPROCESS_READS {
                cpus = 8
                memory = 8.GB
            }

	        withName: GENERATE_GENOME_INDEX {
                cpus = 2
                memory = 4.GB            
	        }
	    
	        withName: ALIGN_READS {
            	cpus = 4
                memory = { task.attempt > 1 ? 32.GB : 4.GB }
                errorStrategy = { task.exitStatus in [102, 137, 138, 139, 140, 255] ? 'retry' : 'ignore' }
                maxRetries = 2
	        }

            withName: QUANTIFY_READS {
            	cpus = { 2 * task.attempt }
		        memory = { 2.GB * task.attempt }
                errorStrategy = 'retry'
                maxRetries = 4
	        }

            withName: FREEBAYES_CALL_VARIANTS {
            	cpus = 8
                memory = { 8.GB * task.attempt }
                errorStrategy = 'retry'
                maxRetries = 4
	        }

            withName: BCFTOOLS_FILTER_VCF {
            	cpus = 4
		        memory = 4.GB
                errorStrategy = { task.exitStatus in [255] ? 'retry' : 'ignore' }
                maxRetries = 2
	        }

            withName: BCFTOOLS_CREATE_CONSENSUS {
            	cpus = 2
		        memory = 4.GB
	        }

            withName: GFFREAD_GET_WT_TRANSCRIPTOME {
            	cpus = 2
		        memory = 4.GB
	        }

            withName: GFFREAD_GET_MUT_TRANSCRIPTOME {
            	cpus = 2
		        memory = 4.GB
	        }

            withName: SALMON_INDEX {
            	cpus = 2
		        memory = 4.GB
	        }

            withName: SALMON_QUANT {
            	cpus = 8
                memory = { task.attempt > 1 ? 64.GB : 8.GB }
                // errorStrategy = { task.exitStatus == 1 ? 'ignore' : 'finish' }
                errorStrategy = { task.exitStatus in [139, 255] ? 'retry' : 'ignore' }
	        }

            withName: SUMMARIZE_TO_GENE { 
                cpus = 8
                memory = 8.GB
                errorStrategy = { task.exitStatus == 1 ? 'ignore' : 'finish' } 
            }

            // withName: GET_HEG_LEG { cpus = 64 \\ memory = 32.GB }

            // withName: GET_HEG_LEG_FASTA { cpus = 16 // memory = 16.GB }

            // withName: GET_CU_FREQUENCIES { cpus = 16 // memory = 16.GB }

            // withName: GET_CU_FIGURES { cpus = 16 // memory = 16.GB }

            // withName: GET_PCA { cpus = 16 // memory = 16.GB }

            withName: CALL_CONSEQUENCE {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: PLOT_TOP_MUTATED_GENES {
            	cpus = 16
		        memory = 64.GB
	        }

            withName: MERGE_VCF {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: CONCAT_VCF {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: VCFR_QC_MERGE {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: VCFR_QC_CONCAT {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: GET_VCF_STATS {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: PLOT_VCF_STATS {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: PLOT_VCF_QC {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: DROP_VCF_GENOTYPES {
            	cpus = 64
		        memory = 115.GB
	        }

            withName: PLOT_MUTATION_CIRCOS {
            	cpus = 64
		        memory = 64.GB
	        }

            // withName: SUMMARIZE_TO_GENE_FEATURECOUNTS { errorStrategy = 'ignore' }
            
        }

    }
}
